<UserControl x:Class="VSSpotify.SpotifyControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vsui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:utilities="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:imaging="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:imageCatalog="clr-namespace:Microsoft.VisualStudio.Imaging;assembly=Microsoft.VisualStudio.ImageCatalog"
             xmlns:theming="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Imaging"
             xmlns:local="clr-namespace:VSSpotify"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}"
             TextElement.Foreground="{DynamicResource {x:Static vsui:EnvironmentColors.StatusBarDefaultTextBrushKey}}"
             TextElement.FontSize="{DynamicResource VsFont.EnvironmentFontSize}"
             TextElement.FontFamily="{DynamicResource VsFont.EnvironmentFontFamily}">
    <UserControl.Resources>
        <utilities:BrushToColorConverter x:Key="BrushToColorConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <local:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
        <utilities:VisibleIfNotNullOrEmptyConverter x:Key="VisibleIfNotNullOrEmptyConverter"/>

        <Style TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="2" />
            <!-- Suppress default button style -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="White" Opacity="0.2" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid Name="RootControl" Background="Transparent" 
          theming:ImageThemingUtilities.ImageBackgroundColor="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DockPanel}}, Converter={StaticResource BrushToColorConverter}}">
        <StatusBar Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Stretch" Padding="0" Margin="0">
            <!-- Sign in and sign out buttons -->
            <Button x:Name="SignInButton" Click="SignInButton_Click">
                <StackPanel Orientation="Horizontal">
                    <imaging:CrispImage Visibility="{Binding IsAuthenticated, Mode=OneWay, Converter={StaticResource InverseBooleanToVisibilityConverter}}" Width="16" Height="16" Moniker="{x:Static imageCatalog:KnownMonikers.AddUser}" ToolTip="Spotify Sign In"/>
                    <imaging:CrispImage Visibility="{Binding IsAuthenticated, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" Width="16" Height="16" Moniker="{x:Static imageCatalog:KnownMonikers.Exit}" ToolTip="Spotify Sign Out"/>
                </StackPanel>
            </Button>

            <!-- Playback buttons -->
            <Button x:Name="PreviousButton" Click="Previous_Click" ToolTip="Spotify Play Previous Song">
                <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static imageCatalog:KnownMonikers.PreviousFrame}"
                                    Visibility="{Binding IsAuthenticated, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
            </Button>
            <Button x:Name="PlayButton" Click="PlayButton_Click"
                    Visibility="{Binding IsAuthenticated, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                <StackPanel Orientation="Horizontal">
                    <imaging:CrispImage Visibility="{Binding IsPaused, Mode=OneWay, Converter={StaticResource InverseBooleanToVisibilityConverter}}" Width="16" Height="16" Moniker="{x:Static imageCatalog:KnownMonikers.Pause}" ToolTip="Spotify Pause"/>
                    <imaging:CrispImage Visibility="{Binding IsPaused, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" Width="16" Height="16" Moniker="{x:Static imageCatalog:KnownMonikers.Play}" ToolTip="Spotify Play"/>
                </StackPanel>
            </Button>
            <Button x:Name="NextButton" Click="NextButton_Click" ToolTip="Spotify Play Next Song"
                    Visibility="{Binding IsAuthenticated, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static imageCatalog:KnownMonikers.PreviousFrame}">
                    <imaging:CrispImage.RenderTransform>
                        <RotateTransform CenterX="8" CenterY="8" Angle="180" />
                    </imaging:CrispImage.RenderTransform>
                </imaging:CrispImage>
            </Button>
            <Button x:Name="SongTitleButton" Click="SongTitleButton_Click" MinWidth="70" 
                    Visibility="{Binding IsAuthenticated, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Foreground="{DynamicResource {x:Static vsui:EnvironmentColors.StatusBarTextBrushKey}}">
                <StackPanel Orientation="Horizontal">
                    <Image x:Name="SongImage" Width="18" Height="18" Source="{Binding CurrentlyPlayingItemUrl}" Margin="0,0,5,0"
                           Visibility="{Binding CurrentlyPlayingItemUrl, Mode=OneWay, Converter={StaticResource VisibleIfNotNullOrEmptyConverter}}"/>
                    <TextBlock Text="{Binding CurrentlyPlayingItemTitle, Mode=OneWay}"/>
                </StackPanel>
            </Button>
            <!-- Volume button with adjustable slider -->
            <Button x:Name="VolumeButton" Click="VolumeButton_Click" ToolTip="Spotify Mute/Unmute"
                    Visibility="{Binding IsAuthenticated, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                <StackPanel>
                    <imaging:CrispImage Width="16" Height="16" Moniker="{x:Static imageCatalog:KnownMonikers.Volume}" />
                    <Popup IsOpen="{Binding IsVolumeExpanded, Mode=OneWay}" Placement="Top" StaysOpen="False" >
                        <Border BorderThickness="1" BorderBrush="{DynamicResource {x:Static vsui:EnvironmentColors.DropDownPopupBorderBrushKey}}">
                            <StackPanel Background="{DynamicResource {x:Static vsui:EnvironmentColors.ToolWindowBackgroundBrushKey}}" >
                                <TextBlock HorizontalAlignment="Center"
                                       Foreground="{DynamicResource {x:Static vsui:ThemedDialogColors.WindowPanelTextBrushKey}}"
                                       Text="{Binding ElementName=VolumeSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" />
                                <Slider x:Name="VolumeSlider" TickFrequency="1" 
                                    IsSnapToTickEnabled="True"
                                    Margin="5" 
                                    Maximum="100" Orientation="Vertical" Height="100" 
                                    ValueChanged="VolumeSlider_ValueChanged"/>
                            </StackPanel>
                        </Border>
                    </Popup>
                </StackPanel>
            </Button>
        </StatusBar>
    </Grid>
</UserControl>
